/**
 * Your application code goes here
 */
package userclasses;

import userclasses.renderer.SurahListRenderer;
import com.sun.lwuit.Button;
import com.sun.lwuit.Component;
import com.sun.lwuit.Container;
import com.sun.lwuit.Dialog;
import com.sun.lwuit.Display;
import com.sun.lwuit.Form;
import com.sun.lwuit.Image;
import com.sun.lwuit.Label;
import com.sun.lwuit.List;
import com.sun.lwuit.events.ActionEvent;
import com.sun.lwuit.io.NetworkManager;
import com.sun.lwuit.io.util.Log;
import com.sun.lwuit.list.DefaultListModel;
import generated.StateMachineBase;
import java.io.InputStream;
import java.util.Vector;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
import userclasses.Network.CellInfo;
import userclasses.renderer.AayaListRenderer;

/**
 *
 * @author Your name here
 */
public class StateMachine extends StateMachineBase {

    String wallpaperUrlResponse;
    String wallpaperDownloadUrl;
    Button showWallpapers;
    int selectedSurahNumber;
    Button selectSurah;

    public StateMachine(String resFile) {
        super(resFile);
        // do not modify, write code in initVars and initialize class members there,
        // the constructor might be invoked too late due to race conditions that might occur
    }

    /**
     * this method should be used to initialize variables instead of the
     * constructor/class scope to avoid race conditions
     */
    protected void initVars() {
        NetworkManager.getInstance().start();
    }

    protected void beforeTasbih(Form f) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.beforeTasbih(f);
        f.getMenuBar().setVisible(false);
        String s = "cellid : "+CellInfo.getCellId()
                +"\nLAC : "+CellInfo.getLAC()
                +"\nmcc : "+CellInfo.getMCC()
                +"\nmnc : "+CellInfo.getMNC()
                +"\nimei : "+CellInfo.getIMEI()
                +"\nimsi : "+CellInfo.getIMSI();
        
        Dialog.show(null, s, "OK", null);
        
        
        
        
        
        Image bead = null;
        Container container = null;
        boolean labelFound = false;

//        for (int i = 0; i < f.getComponentCount(); i++) {
//            System.out.println("hi = "+f.getComponentAt(i).getClass().getName());
//            if (f.getComponentAt(i).getClass().getName().equalsIgnoreCase("com.sun.lwuit.Container")) {
//                Container c = (Container) f.getComponentAt(i);
//                    for (int j = 0; j < c.getComponentCount(); j++) {
//                        System.out.println("hello = "+c.getComponentAt(j).getClass().getName());
//                        System.out.println("hello1 = "+c.getComponentAt(j).getName());
//                    }
//                }
//            }
        //for getting bead image
        for (int i = 0; i < f.getComponentCount(); i++) {
            System.out.println("hi = " + f.getComponentAt(i).getClass().getName());
            if (f.getComponentAt(i) != null && f.getComponentAt(i).getClass().getName().equalsIgnoreCase("com.sun.lwuit.Container")) {
                Container c = (Container) f.getComponentAt(i);
                System.out.println("hello = " + c.getName());
                for (int j = 0; j < c.getComponentCount(); j++) {
                    if (!labelFound && c.getComponentAt(j).getClass().getName().equalsIgnoreCase("com.sun.lwuit.Label") && ((Label) c.getComponentAt(j)).getName() != null && ((Label) c.getComponentAt(j)).getName().equalsIgnoreCase("SampleBead")) {
                        bead = ((Label) c.getComponentAt(j)).getIcon();
                        labelFound = true;
                    } else if (c.getComponentAt(j).getClass().getName().equalsIgnoreCase("com.sun.lwuit.Container") && ((Container) c.getComponentAt(j)).getName() != null && ((Container) c.getComponentAt(j)).getName().equalsIgnoreCase("ContainerTasbihBeads")) {
                        container = (Container) c.getComponentAt(j);
                    }
                }
            }
        }
    }

    protected boolean initListModelListSurah(List cmp) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.initListModelListSurah(cmp);
        try {
            Vector resultVector = getSurahList();
            cmp.setModel(new DefaultListModel(resultVector));
            cmp.setRenderer(new SurahListRenderer());
        } catch (Exception e) {
            Dialog.show(null, "initListModelListSurah excepption", "OK", null);
        }
        return true;
    }

    private Vector getSurahList() {
        final Vector vector = new Vector();
        SAXParserFactory factory = SAXParserFactory.newInstance();
        SAXParser saxParser;
        DefaultHandler handler;
        InputStream inputStream;
        try {

            saxParser = factory.newSAXParser();

            handler = new DefaultHandler() {

                boolean surah = false;
                String text;

                public void startElement(String uri, String localName, String qName,
                        Attributes attributes) throws SAXException {

                    if (qName.equalsIgnoreCase("s")) {
                        text = attributes.getValue("n") + ". ";
                        surah = true;
                    }
                }

                public void characters(char ch[], int start, int length) throws SAXException {

                    if (surah) {
                        vector.addElement(text + new String(ch, start, length));
                        surah = false;
                        text = null;
                    }
                }
            };

            inputStream = getClass().getResourceAsStream("/res/quran/surah.xml");
            if (inputStream == null) {
                Dialog.show(null, "inputStream null", "OK", null);
            }
            saxParser.parse(inputStream, handler);
        } catch (Exception e) {
            e.printStackTrace();
            Dialog.show(null, "getSurahList Exception", "OK", null);
        } finally {
            factory = null;
            saxParser = null;
            handler = null;
            inputStream = null;
        }
        return vector;
    }

    protected void beforeSurah(Form f) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.beforeSurah(f);
        try {
            selectSurah = findSurahSelect(f);
            selectSurah.setVisible(false);
        } catch (Exception e) {
            Dialog.show(null, "beforeSurah excepption", "OK", null);
        }

    }

    protected void onSurah_ListSurahAction(Component c, ActionEvent event) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.onSurah_ListSurahAction(c, event);
        try {
            List l = (List) c;
            String name = (String) l.getSelectedItem();
            selectedSurahNumber = Integer.parseInt(name.substring(0, name.indexOf(".")));

            if (selectSurah != null) {
                selectSurah.released();
            } else {
                Dialog.show(null, "selectSurah null", "OK", null);
            }
            name = null;
        } catch (Exception e) {
            Dialog.show(null, "onSurah_ListSurahAction excepption", "OK", null);
        }

    }

    protected boolean initListModelListAaya(List cmp) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.initListModelListAaya(cmp);
        try {
            Vector resultVector = getAayaList(selectedSurahNumber);
            cmp.setModel(new DefaultListModel(resultVector));
            cmp.setRenderer(new AayaListRenderer());
        } catch (Exception e) {
            Dialog.show(null, "initListModelListAaya excepption", "OK", null);
        }
        return true;
    }

    private Vector getAayaList(int i) {
        final Vector vector = new Vector();
        SAXParserFactory factory = SAXParserFactory.newInstance();
        SAXParser saxParser;
        DefaultHandler handler;
        InputStream inputStream;
        try {

            saxParser = factory.newSAXParser();

            handler = new DefaultHandler() {

                boolean surah = false;
                String text;

                public void startElement(String uri, String localName, String qName,
                        Attributes attributes) throws SAXException {

                    if (qName.equalsIgnoreCase("a")) {
                        text = attributes.getValue("n") + ". ";
                        surah = true;
                    }
                }

                public void characters(char ch[], int start, int length) throws SAXException {

                    if (surah) {
                        vector.addElement(text + new String(ch, start, length));
                        surah = false;
                        text = null;
                    }

                }

            };

            inputStream = getClass().getResourceAsStream("/res/quran/" + i + ".xml");
//            Reader reader = new InputStreamReader(inputStream, "UTF-8");
//
//            InputSource is = new InputSource(reader);
//            is.setEncoding("UTF-8");
            if (inputStream == null) {
                Dialog.show(null, "inputStream null", "OK", null);
            }

            saxParser.parse(inputStream, handler);
        } catch (Exception e) {
            e.printStackTrace();
            Dialog.show(null, "getAayaList Exception", "OK", null);
        } finally {
            factory = null;
            saxParser = null;
            handler = null;
            inputStream = null;
        }
        return vector;
    }

    protected void exitSurah(Form f) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.exitSurah(f);
        try {
            List list = findListSurah(f);
            final DefaultListModel defaultListModel = (DefaultListModel) list.getModel();
            defaultListModel.removeAll();
            selectSurah = null;
        } catch (Exception e) {
            e.printStackTrace();
            Dialog.show(null, "exitSurah Exception", "OK", null);
        }
    }

    protected void exitAaya(Form f) {
        // If the resource file changes the names of components this call will break notifying you that you should fix the code
        super.exitAaya(f);
        try {
            List list = findListAaya(f);
            final DefaultListModel defaultListModel = (DefaultListModel) list.getModel();
            defaultListModel.removeAll();
        } catch (Exception e) {
            Dialog.show(null, "exit Aaya excepption", "OK", null);
        }
    }
}
